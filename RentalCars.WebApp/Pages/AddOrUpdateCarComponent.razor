@page "/cars/add"
@inject NavigationManager NavigationManager
@inject IWebApiRepository webApiRepository
@inject HttpClient client 

@using System.IO
@using Tewr.Blazor.FileReader

<MudText Typo="Typo.h3" Align="Align.Center">Add New Rental Car</MudText>

<br />
<br />

<MudGrid>
    <MudItem xl="3"></MudItem>
    <MudItem xl="6">
        <EditForm Model="@car" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Brand"
                                  @bind-Value="car.Brand" For="@(() => car.Brand)" />
                    <MudTextField Label="Model"
                                  @bind-Value="car.Model" For="@(() => car.Model)" />
                    <MudTextField Label="Make"
                                  @bind-Value="car.Make" For="@(() => car.Make)" />
                    <MudTextField Label="Year"
                                  @bind-Value="car.Year" For="@(() => car.Year)" />
                    <MudTextField Label="Color"
                                  @bind-Value="car.Color" For="@(() => car.Color)" />
                    <MudTextField Label="Description"
                                  @bind-Value="car.Description" For="@(() => car.Description)"
                                  Lines="5" />
                    <MudTextField Label="Kilometers"
                                  @bind-Value="car.Kilometers" For="@(() => car.Kilometers)" />
                    <MudTextField Label="License Plate Number"
                                  @bind-Value="car.LicensePlaceNumber" For="@(() => car.LicensePlaceNumber)" />
                    <MudTextField Label="Rental Price"
                                  @bind-Value="car.RentalPrice" Adornment="Adornment.Start" For="@(() => car.RentalPrice)"
                                  AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Filled.CloudUpload"
                               for="fileInput">
                        Upload Files
                    </MudButton>
                    @if (selectedFiles != null)
                    {
                        <MudText Class="ml-5" Typo="@Typo.h6">@selectedFiles.Count() File@(selectedFiles.Count() == 1 ? "" : "s"):</MudText>
                        <MudList>
                            @foreach (var file in selectedFiles)
                            {
                                <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                                    @file.Name <code>@file.Size bytes</code>
                                </MudListItem>
                            }
                        </MudList>
                    }
                </MudCardActions>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Add</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
        <InputFile id="fileInput" OnChange="UploadFiles" hidden multiple />
    </MudItem>
    <MudItem xl="3"></MudItem>
</MudGrid>


@code {

    private Car car = new();
    string[] errors = { };
    MudForm form;
    IReadOnlyList<IBrowserFile> selectedFiles;
    private static string url = "https://localhost:44309";

    private async Task OnValidSubmit()
    {

        foreach (var file in selectedFiles)
        {

            Stream stream = file.OpenReadStream();
            MemoryStream ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            stream.Close();
            UploadedFile uploadedFile = new UploadedFile();
            uploadedFile.FileName = file.Name;
            uploadedFile.FileContent = ms.ToArray();
            ms.Close();

            var response = await client.PostAsJsonAsync<UploadedFile>("https://localhost:44309/api/Images", uploadedFile);
            if(response.IsSuccessStatusCode)
            {
                var uploadedFileName = await response.Content.ReadAsStringAsync();
                car.ImageUrl = $"{url}/{uploadedFileName}";
            }
        }

        await webApiRepository.AddNewCar(car);
        NavigationManager.NavigateTo("/cars");
    }

    private void UploadFiles(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles();
    }

}
