@page "/cars"
@inject IWebApiRepository webApiRepository

<br />

<MudText Align="Align.Center" Typo="Typo.h2">All Rentals</MudText>

<br />
<br />

<MudGrid Spacing="2">

    <MudItem>

        <div Class="d-flex flex-wrap justify-center">

            @foreach (var car in cars)
            {
                <MudCardComponent Car="car" OnClickCallBack="@ToggleOpen"></MudCardComponent>
            }

            <MudPopover Open="@_isOpen" Class="my-15 py" Style="width:1000px; height:575px;" Direction="Direction.Bottom">

                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Align="Align.Center" Typo="Typo.h3">@car.Year @car.Brand @car.Make @car.Model</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@ToggleClose" Color="Color.Warning" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardMedia Image="@car.ImageUrl" Height="400" />
                    <MudCardContent>
                        <MudText Typo="Typo.body2">@car.Description</MudText>
                    </MudCardContent>
                </MudCard>

            </MudPopover>

        </div>
    </MudItem>

</MudGrid>




@code {

    private List<Car> cars = new List<Car>();
    private Car car = new Car();
    public bool _isOpen;
    private string imageUrl;

    protected override async Task OnInitializedAsync()
    {
        cars = await webApiRepository.GetCars();
    }

    private async Task ToggleOpen(int carId)
    {

        car = await webApiRepository.GetCarById(carId);

        imageUrl = car.ImageUrl;

        _isOpen = true;
    }

    private void ToggleClose()
    {
        car = new Car();

        _isOpen = false;
    }

}
